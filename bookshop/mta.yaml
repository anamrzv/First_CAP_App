## Generated mta.yaml based on template version 0.4.0
## appName = test
## language=nodejs; multitenant=false
## approuter=
_schema-version: '3.1'
ID: test
version: 1.0.0
description: "A simple CAP project."
parameters:
  enable-parallel-deployments: true
   
build-parameters:
  before-all:
   - builder: custom
     commands:
      - npm install --production
      - npx -p @sap/cds-dk cds build --production

modules:
 # --------------------- SERVER MODULE ------------------------
 - name: test-srv
 # ------------------------------------------------------------
   type: nodejs
   path: gen/srv
   parameters:
     buildpack: nodejs_buildpack
   requires:
    # Resources extracted from CAP configuration
    - name: test-db
    - name: third-uaa
    - name: dest0
   provides:
    - name: srv-api      # required by consumers of CAP services (e.g. approuter)
      properties:
        srv-url: ${default-url}

 # -------------------- SIDECAR MODULE ------------------------
 - name: test-db-deployer
 # ------------------------------------------------------------
   type: hdb
   path: gen/db  
   parameters:
     buildpack: nodejs_buildpack
   requires:
    # 'hana' and 'xsuaa' resources extracted from CAP configuration
    - name: test-db

 # -------------------- APPROUTER MODULE ------------------------
 - name: approuter
 # ------------------------------------------------------------
   type: approuter.nodejs
   path: approuter 
   parameters:
     buildpack: nodejs_buildpack
     disk-quota: 512M
     memory: 512M
   requires:
    - name: third-uaa
    - name: my_html_repo_runtime
    - name: srv-api
      group: destinations
      properties: 
       name: srv-api
       url: '~{srv-url}'
       forwardAuthToken: true

 # -------------------- WEBAPP DEPLOYER MODULE ------------------------ 
 - name: html5-deployer
   type: com.sap.application.content
   path: .
   requires:
    - name: my_html_repo_host
      parameters:
       content-target: true
   build-parameters:
    build-result: resources
    requires:
     - artifacts:
        - HTML5Module-content.zip
       name: HTML5Module
       target-path: resources/

#builds application
 - name: HTML5Module
   type: html5
   path: HTML5Module
   build-parameters:
    builder: custom
    commands:
     - npm run build
    supported-platforms: []

 # -------------------- WEBAPP DEPLOYER MODULE ------------------------ 
 - name: second-html5-deployer
 # ------------------------------------------------------------
   type: com.sap.application.content
   path: .
   requires:
    - name: my_html_repo_host
      parameters:
       content-target: true
   build-parameters:
    build-result: resources
    requires:
     - artifacts:
        - NewHTML5Module-content.zip
       name: NewHTML5Module
       target-path: resources/

 - name: NewHTML5Module
   type: html5
   path: NewHTML5Module
   build-parameters:
    builder: custom
    commands:
     - npm run build
    supported-platforms: []

 
 - name: admin-deployer
   type: com.sap.application.content
   path: .
   requires:
    - name: my_html_repo_host
      parameters:
       content-target: true
   build-parameters:
    build-result: resources
    requires:
     - artifacts:
        - admin-content.zip
       name: admin-module
       target-path: resources/

 - name: admin-module
   type: html5
   path: app/admin/webapp
   build-parameters:
    builder: custom
    commands:
     - npm run build
    supported-platforms: []


 - name: browse-deployer
   type: com.sap.application.content
   path: .
   requires:
    - name: my_html_repo_host
      parameters:
       content-target: true
   build-parameters:
    build-result: resources
    requires:
     - artifacts:
        - browse-content.zip
       name: browse-module
       target-path: resources/

 - name: browse-module
   type: html5
   path: app/browse/webapp
   build-parameters:
    builder: custom
    commands:
     - npm run build
    supported-platforms: []


 - name: orders-deployer
   type: com.sap.application.content
   path: .
   requires:
    - name: my_html_repo_host
      parameters:
       content-target: true
   build-parameters:
    build-result: resources
    requires:
     - artifacts:
        - orders-content.zip
       name: orders-module
       target-path: resources/

 - name: orders-module
   type: html5
   path: app/orders/webapp
   build-parameters:
    builder: custom
    commands:
     - npm run build
    supported-platforms: []

resources:
 # services extracted from CAP configuration
 # 'service-plan' can be configured via 'cds.requires.<name>.vcap.plan'
# ------------------------------------------------------------
 - name: test-db
# ------------------------------------------------------------
   type: com.sap.xs.hdi-container
   parameters:
     service: hana  # or 'hanatrial' on trial landscapes
     service-plan: hdi-shared
   properties:
     hdi-service-name: ${service-name}
  
# ------------------------------------------------------------
 - name: third-uaa
# ------------------------------------------------------------
   type: org.cloudfoundry.managed-service
   parameters:
     service: xsuaa
     service-plan: application
     path: ./xs-security.json
     config:
      xsappname: test
      tenant-mode: dedicated

# ------------------------------------------------------------
 - name: dest0
# ------------------------------------------------------------
   type: org.cloudfoundry.existing-service #for already existing srv

# ------------------------------------------------------------   
 - name: dest1 #create non-manually
# ------------------------------------------------------------
   type: org.cloudfoundry.managed-service
   parameters:
     service-plan: lite
     service: destination





# ------------------------------------------------------------   
 - name: my_html_repo_runtime
# ------------------------------------------------------------
   type: org.cloudfoundry.managed-service
   parameters:
     service-plan: app-runtime
     service: html5-apps-repo

# ------------------------------------------------------------   
 - name: my_html_repo_host
# ------------------------------------------------------------
   type: org.cloudfoundry.managed-service
   parameters:
     service-plan: app-host
     service: html5-apps-repo
